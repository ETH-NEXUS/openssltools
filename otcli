#!/bin/bash

DIR=$(cd $(dirname $0); pwd -P)
source ${DIR}/config.sh

function usage {
	echo "USAGE:"
	echo "$(basename $0) show url port                     : Show content of certificatei from the given url"
	echo "$(basename $0) show cert						   : Show the content of a cert file"
	echo "$(basename $0) verify ca_cert cert			   : Verify if certificate matches ca certificate"
	echo "$(basename $0) info cert						   : Display the important information about the certificate"
	echo "$(basename $0) hash cert                         : get hash of cert"
	echo "$(basename $0) hashlink cert                     : create a hashlink to the cert"
	echo "$(basename $0) help"
}

if [ "$1" == "help" -o $# -lt 1 ]; then
	usage
fi

if [ "$1" == "show" -a "$2" != "" -a "$3" != "" ]; then
	URL="$2"
	PORT="$3"
	${OPENSSL} s_client -showcerts -connect ${URL}:${PORT} </dev/null 2>/dev/null | ${OPENSSL} x509 -text
elif [ "$1" == "show" -a "$2" != "" ]; then
	CERT="$2"
	${OPENSSL} x509 -noout -text -in "${CERT}" | less
elif [ "$1" == "info" -a "$2" != "" ]; then
	CERT="$2"
	while read line 
	do
		if echo $line | grep "^Issuer:" 2>&1 >/dev/null; then
			ISSUER=$(echo ${line} | sed -E 's/Issuer: (.*)/\1/') 
		fi
		if echo $line | grep "^Subject:" 2>&1 >/dev/null; then
			SUBJECT=$(echo ${line} | sed -E 's/Subject: (.*)/\1/') 
		fi
		if echo $line | grep "^Not Before:" 2>&1 >/dev/null; then
			FROM=$(echo ${line} | sed -E 's/Not Before: (.*)/\1/') 
		fi
		if echo $line | grep "^Not After :" 2>&1 >/dev/null; then
			TO=$(echo ${line} | sed -E 's/Not After : (.*)/\1/') 
		fi
	done < <(${OPENSSL} x509 -noout -text -in "${CERT}" | sed -E 's,^[[:space:]]+,,')
	printf "%-11s: %s\n" "Issuer" "${ISSUER}" 
	printf "%-11s: %s\n" "Subject" "${SUBJECT}" 
	if [ "${ISSUER}" == "${SUBJECT}" ]; then
		printf "%-11s: %s\n" "Selfsigned" "Yes"
	else
		printf "%-11s: %s\n" "Selfsigned" "No"
	fi
	printf "%-11s: %s\n" "Valid from" "${FROM}" 
	printf "%-11s: %s\n" "Valid to" "${TO}" 
elif [ "$1" == "verify" -a "$2" != "" -a "$3" != "" ]; then
	CACERT="$2"
	CERT="$3"
	${OPENSSL} verify -CAfile "${CACERT}" "${CERT}"
elif [ "$1" == "hash" -a "$2" != "" ]; then
	CERT="$2"
	${OPENSSL} x509 -noout -hash -in "${CERT}"
elif [ "$1" == "hashlink" -a "$2" != "" ]; then
	CERT="$2"
	HASH=$(${OPENSSL} x509 -noout -hash -in "${CERT}")
	ln -s "${CERT}" "${HASH}.0"
	#Â on windows use mklink "${HASH}.0" "${CERT}"
fi
